{
    "collab_server" : "",
    "contents" : "library(shiny)\n\nshinyServer(function(input, output) {\n  \n  # By declaring get_my_table as a reactive expression we ensure \n  # that:\n  #\n  #  1) It is only called when the inputs it depends on changes\n  #  2) The computation and result are shared by all the callers \n  #\t  (it only executes a single time)\n  #\n  get_my_table <- reactive({\n    result <- NULL;\n    if (!is.null(input$file1) && !is.null(input$file1$datapath)){\n      result <- read.table(input$file1$datapath, header=input$header, sep=input$sep);\n      if (!input$header) {\n        colnames(result) <- c('x', 'y');\n      }\n    }\n  });\n  \n  output$contents <- renderTable({\n    return(get_my_table());\n  });\n   \n  output$correlation_field <- renderPlot({\n    my_table <- get_my_table();\n    if (!is.null(my_table)){\n      return(plot(my_table));\n    }\n    return(NULL);\n  })\n  \n  #clear_temp_data(output);\n  \n  return(NULL);\n})\n",
    "created" : 1480414202113.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1382021725",
    "id" : "B68FF2BC",
    "lastKnownWriteTime" : 1480485046,
    "last_content_update" : 1480485046392,
    "path" : "D:/Книги/Прога/7 семестр/Випадкові процеси/lab1/Rlab1/server.R",
    "project_path" : "server.R",
    "properties" : {
        "docOutlineSize" : "72.9956574312099",
        "docOutlineVisible" : "0"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}